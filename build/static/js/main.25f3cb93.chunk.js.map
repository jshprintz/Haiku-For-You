{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Header/Header.jsx","components/Loader/Loader.jsx","utils/postApi.js","components/PostCard/PostCard.jsx","components/PostGallery/PostGallery.jsx","utils/likesApi.js","pages/Feed/Feed.jsx","components/ProfileBio/ProfileBio.jsx","pages/Profile/Profile.jsx","pages/More/More.jsx","components/AddPost/AddPost.jsx","pages/Write/Write.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","email","password","bio","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","preventDefault","key","formData","FormData","append","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","Header","as","color","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","LoginPage","fluid","size","Message","to","PageHeader","loggedUser","handleLogout","clearing","floated","Image","src","photoUrl","avatar","onClick","Icon","Loading","Loader","active","create","post","getAll","PostCard","addLike","isProfile","removeLike","likedIndex","likes","findIndex","like","likeColor","likeClickHandler","_id","Card","Content","title","poem","postID","length","PostGallery","posts","numPhotosCol","loading","Group","itemsPerRow","stackable","Dimmer","inverted","map","postId","likeId","Feed","setPosts","setLoading","likesAPI","getPosts","postsAPI","data","useEffect","centered","Row","maxwidth","ProfileBio","vertical","ProfilePage","profileUser","setProfileUser","useParams","useCallback","More","AddPostForm","handleAddPost","Write","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.25f3cb93.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  const tokenService = {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };\n\n  export default tokenService;","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction getProfile(username){\n  console.log('getProfile calling')\n  \n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // <- since this will be called when we're logged in, send over the jwt token\n      // so the server knows who's making the request from the client\n    }\n  }).then(res => {\n    // This function happens when the browser recieves a response from the express server\n    console.log(res, \"<---Res in UserService\")\n\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile Request, check the server terminal!')\n  })\n}\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user  // This is assuming your sending multipart formdata aka phot\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nconst userService = {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n};\n\nexport default userService;\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: \"\",\n    passwordError: false,\n  });\n\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n    bio: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPasswordMatch(state.password, state.passwordConf))\n      return setError({\n        message: \"Passwords Must Match!\",\n        passwordError: true,\n      });\n    setError({ message: \"\", passwordError: false });\n\n    const formData = new FormData();\n\n    formData.append(\"photo\", selectedFile);\n\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n      setError({ message: err.message, passwordError: false });\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"grey\" textAlign=\"center\">\n          Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"passwordConf\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.TextArea\n              label=\"bio\"\n              name=\"bio\"\n              placeholder=\"Tell us more about yourself...\"\n              value={state.bio}\n              onChange={handleChange}\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type=\"submit\" className=\"btn\">\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err, \"<--ERROR IN LOGIN PAGE\");\n      setError(err.message);\n    }\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"grey\" textAlign=\"center\">\n          Log-in to your account\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Button\n              color=\"grey\"\n              fluid\n              size=\"large\"\n              type=\"submit\"\n              className=\"btn\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <Link to=\"/signup\">Sign Up</Link>\n        </Message>\n        {error ? <ErrorMessage error={error} /> : null}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n  return (\n    <Segment clearing>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to={`/${loggedUser?.username}`}>\n          <Image\n            src={\n              loggedUser?.photoUrl\n                ? loggedUser?.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            }\n            avatar\n          ></Image>\n        </Link>\n        {loggedUser ? (\n          <Link to=\"\" onClick={handleLogout}>\n            Logout\n          </Link>\n        ) : (\n          <Link to={`/${loggedUser?.username}`}>Login</Link>\n        )}\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to=\"/\">\n          <Icon name=\"home\"></Icon>\n        </Link>\n\n        {loggedUser ? (\n          <>\n            <Link to=\"/more\">More</Link>\n            <Link to=\"/write\">Write a Haiku</Link>\n          </>\n        ) : null}\n      </Header>\n    </Segment>\n  );\n}\n","import { Loader } from \"semantic-ui-react\";\n\nexport default function Loading() {\n  return (\n    <Loader size=\"small\" active>\n      Loading\n    </Loader>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts\";\n\nexport function create(post) {\n\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        body: JSON.stringify(post),\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Bearer \" + tokenService.getToken(),\n        },\n        \n    }).then((res) =>{\n        if (res.ok) return res.json();\n        return res.json().then(response => {\n            console.log(response, \"<-- Response in postAPI Create\")\n            throw new Error(response.err)\n        })\n    });\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken() // This grabs thee JWT token out\n            // local storage and send its in the header to the server\n        }\n    })\n    .then((res) => {\n        if(res.ok) return res.json();\n\n        return res.json().then(response => {\n            console.log(response, \"<-- Response in postAPI Get\")\n            throw new Error(response.err)\n        })\n    })\n}\n\nexport function deletePost(postID) {\n    return fetch(BASE_URL + \"/\" + postID, {\n        method: \"DELETE\",\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken() // This grabs thee JWT token out\n            // local storage and send its in the header to the server\n        }\n    })\n    .then((res) => {\n        if(res.ok) return res.json();\n\n        return res.json().then(response => {\n            console.log(response, \"<-- Response in postAPI Get\")\n            throw new Error(response.err)\n        })\n    })\n}","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { deletePost } from \"../../utils/postApi\"\n\n\nfunction PostCard({ post, isProfile, addLike, removeLike, loggedUser }) {\n  const likedIndex = post.likes.findIndex(\n    (like) => like.username === loggedUser.username\n  );\n  const likeColor = likedIndex > -1 ? \"pink\" : \"grey\";\n\n  const likeClickHandler =\n    likedIndex > -1\n      ? () => removeLike(post.likes[likedIndex]._id)\n      : () => addLike(post._id);\n\n  console.log(loggedUser.username, \"<<<-Logged user\");\n  console.log(post.user.username);\n\n  const deleteClickHandler = () => {\n    console.log(\"DELETE CLICKED\")\n    console.log(post._id)\n    deletePost(post._id)\n  }\n\n  //--------------------------------------------------------\n  //  FOLLOW. PROBABLY WILL NEED TO CHANGE THE USER MODEL.\n\n  // const followIndex = loggedUser.follow.findIndex(\n  //   (follow) => follow.username === loggedUser.username\n  // );\n  // const followColor = followIndex > -1 ? \"blue\" : \"grey\";\n\n  // const followClickHandler =\n  // likedIndex > -1 ?\n  //    () => removeLike(post.follow[followIndex]._id)\n  //   : () => addLike(post._id);\n  //---------------------------------------------------------\n\n  return (\n    <Card key={post._id}>\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <Link to={`/${post.user.username}`}>\n            <Image\n              size=\"large\"\n              avatar\n              src={\n                post.user.photoUrl\n                  ? post.user.photoUrl\n                  : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n              }\n            />\n            {post.user.username}\n          </Link>\n        </Card.Header>\n        <br />\n        <Card.Header>{post.title}</Card.Header>\n        <p>{post.poem}</p>\n      </Card.Content>\n\n      <Card.Content textAlign={\"right\"}>\n        {post.user.username === loggedUser.username ? (\n          <Link to={`#`}>\n            <Icon\n              name={\"delete\"}\n              size=\"large\"\n              color={\"red\"}\n              onClick={deleteClickHandler}\n            />\n          </Link>\n        ) : (\n          <>\n          <Link to={`#`}>\n            <Icon\n              name={\"heart\"}\n              size=\"large\"\n              color={likeColor}\n              onClick={likeClickHandler}\n            />\n          </Link>\n            {post.likes.length}\n\n            <Link to={`#`}>\n              <Icon\n                name={\"user plus\"}\n                size=\"large\"\n                color={\"blue\"}\n                //onClick={followClickHandler}\n              />\n            </Link>\n          </>\n        )}\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport { Card, Dimmer, Segment, Image } from \"semantic-ui-react\";\nimport PostCard from \"../PostCard/PostCard\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function PostGallery({\n  posts,\n  numPhotosCol,\n  isProfile,\n  loading,\n  removeLike,\n  addLike,\n  loggedUser,\n}) {\n  return (\n    <Card.Group itemsPerRow={numPhotosCol} stackable>\n      {loading ? (\n        <Segment>\n          <Dimmer active inverted>\n            <Loader size=\"small\">Loading</Loader>\n          </Dimmer>\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n        </Segment>\n      ) : null}\n      {posts.map((post) => {\n        return (\n          <PostCard\n            post={post}\n            key={post._id}\n            isProfile={isProfile}\n            removeLike={removeLike}\n            addLike={addLike}\n            loggedUser={loggedUser}\n          />\n        );\n      })}\n    </Card.Group>\n  );\n}\n","import tokenService from \"./tokenService\";\n// import the tokenService so we can get the jwt to send\n// over in our requests\n\nconst BASE_URL = \"/api/\";\n\nexport function create(postId) {\n  return fetch(`${BASE_URL}posts/${postId}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), \n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}\n\nexport function removeLike(likeId) {\n  return fetch(`${BASE_URL}likes/${likeId}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), \n    }\n  }).then((res) => {\n    if (res.ok) return res.json();\n    throw new Error(res.error);\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport PageHeader from \"../../components/Header/Header\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Loading from \"../../components/Loader/Loader\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport \"../App/App.css\";\n\nimport { Grid } from \"semantic-ui-react\";\n\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as likesAPI from \"../../utils/likesApi\";\n\nexport default function Feed({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  async function addLike(postId) {\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getPosts();\n    } catch (err) {\n      console.log(err, \" err from server\");\n      setError(\"error adding like\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getPosts();\n    } catch (err) {\n      console.log(err);\n      setError(\"error removing like\");\n    }\n  }\n\n  async function getPosts() {\n    try {\n      const response = await postsAPI.getAll();\n      setPosts([...response.data]);\n      setLoading(false);\n    } catch (err) {\n      console.log(err.message, \" this is the error\");\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className=\"feed-gallery\">\n        <Grid.Column style={{ maxwidth: 350 }}>\n          <h1>Here are all the posts</h1>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={3}\n            isProfile={false}\n            loading={loading}\n            addLike={addLike}\n            removeLike={removeLike}\n            loggedUser={loggedUser}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nexport default function ProfileBio({ user }) {\n  return (\n    <Grid textAlign=\"center\">\n      <Grid.Row>\n        <Grid.Column>\n          <Image\n            src={`${\n              user.photoUrl\n                ? user.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            } `}\n            avatar\n            size=\"small\"\n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column textAlign=\"left\" style={{ maxWidth: 450 }}>\n          <Segment vertical>\n            <h3>{user.username}</h3>\n          </Segment>\n          <Segment>\n            <span> Bio: {user.bio}</span>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\nimport PageHeader from \"../../components/Header/Header\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Loading from \"../../components/Loader/Loader\";\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\nimport \"../App/App.css\";\n\nimport * as likesAPI from \"../../utils/likesApi\";\nimport userService from \"../../utils/userService\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n  const [error, setError] = useState(\"\");\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n\n  const { username } = useParams();\n\n  async function addLike(postId) {\n    // Where is the postId defined in the UI?\n\n    try {\n      const response = await likesAPI.create(postId);\n      console.log(response, \"from add like\");\n      getProfile();\n    } catch (err) {\n      console.log(err, \" err from server\");\n    }\n  }\n\n  async function removeLike(likeId) {\n    try {\n      const response = await likesAPI.removeLike(likeId);\n      console.log(response, \" remove like\");\n      getProfile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const getProfile = useCallback(async () => {\n\n    try {\n      const response = await userService.getProfile(username);\n      setLoading(false);\n      setProfileUser(response.data.user);\n      setPosts(response.data.posts);\n\n      console.log(response, \"Response\");\n    } catch (err) {\n      console.log(err.message, \"<--Error\");\n      setError(\"Profile does not exist! You are in the wrong in place.\");\n    }\n  }, [username]);\n\n  useEffect(() => {\n    console.log(\"firing!\");\n\n    getProfile();\n  }, [username, getProfile]);\n\n  if (error) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <ErrorMessage error={error} />;\n      </>\n    );\n  }\n\n  if (loading) {\n    return (\n      <>\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <ProfileBio user={profileUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered className=\"profile-posts\">\n        <Grid.Column style={{ maxWidth: 750 }}>\n          <h3>Posts go here</h3>\n          <PostGallery\n            posts={posts}\n            numPhotosCol={3}\n            isProfile={true}\n            loading={loading}\n            addLike={addLike}\n            removeLike={removeLike}\n            loggedUser={loggedUser}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport PageHeader from \"../../components/Header/Header\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function More({ loggedUser, handleLogout }) {\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <h1>Here is the MORE page.</h1>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nexport default function AddPostForm(props) {\n  const [state, setState] = useState({\n    title: \"\",\n    poem: \"\",\n  });\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await props.handleAddPost(state);\n    } catch (err) {\n      console.log(err, \"<-- in Addpost handlesubmit\");\n    }\n  }\n\n  return (\n    <Segment>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-control\"\n          name=\"title\"\n          value={state.title}\n          placeholder=\"Title\"\n          onChange={handleChange}\n          required\n        />\n        <Form.TextArea\n          className=\"form-control\"\n          name=\"poem\"\n          value={state.poem}\n          placeholder=\"Write Haiku Here\"\n          onChange={handleChange}\n          required\n        />\n        <Button type=\"submit\" className=\"btn\">\n          Post Haiku\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n","import React, { useState } from \"react\";\nimport PageHeader from \"../../components/Header/Header\";\nimport AddPost from \"../../components/AddPost/AddPost\";\n\nimport { Grid } from \"semantic-ui-react\";\nimport * as postsAPI from \"../../utils/postApi\";\n\nexport default function Write({ loggedUser, handleLogout }) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  async function handleAddPost(post) {\n    try {\n      const response = await postsAPI.create(post); \n      setPosts([response.data, ...posts]); \n\n    } catch (err) {\n      setError(\"Error creating post, please try again\");\n    }\n  }\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <h1>Write a Haiku</h1>\n          <p>{error}</p>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <AddPost handleAddPost={handleAddPost} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport FeedPage from \"../Feed/Feed\";\nimport ProfilePage from \"../Profile/Profile\";\nimport MorePage from \"../More/More\";\nimport WritePage from \"../Write/Write\";\n\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  // if user is logged in.\n  if (user) {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<FeedPage loggedUser={user} handleLogout={handleLogout} />} \n        />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/more\"\n          element={<MorePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/write\"\n          element={<WritePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n    );\n  }\n\n  // If user is not logged in\n  return (\n    <Routes>\n        <Route path=\"/\" element={<FeedPage loggedUser={user} handleLogout={handleLogout} />} \n        />\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}